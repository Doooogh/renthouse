<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.graduation.renthouse.rent.roleper.dao.RolePerDao">

	<select id="get" resultType="com.graduation.renthouse.rent.roleper.domain.RolePerDO">
		select `id`,`role_id`,`per_id` from role_per where id = #{value}
	</select>

	<select id="list" resultType="com.graduation.renthouse.rent.roleper.domain.RolePerDO">
		select `id`,`role_id`,`per_id` from role_per
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="roleId != null and roleId != ''"> and role_id = #{roleId} </if>
		  		  <if test="perId != null and perId != ''"> and per_id = #{perId} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from role_per
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="roleId != null and roleId != ''"> and role_id = #{roleId} </if>
		  		  <if test="perId != null and perId != ''"> and per_id = #{perId} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.graduation.renthouse.rent.roleper.domain.RolePerDO" useGeneratedKeys="true" keyProperty="id">
		insert into role_per
		(
			`role_id`, 
			`per_id`
		)
		values
		(
			#{roleId}, 
			#{perId}
		)
	</insert>
	 
	<update id="update" parameterType="com.graduation.renthouse.rent.roleper.domain.RolePerDO">
		update role_per 
		<set>
			<if test="roleId != null">`role_id` = #{roleId}, </if>
			<if test="perId != null">`per_id` = #{perId}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from role_per where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from role_per where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>


	<select id="listPerIdByRoleId" resultType="integer">
		select per_id from role_per
		<where>role_id = #{roleId}</where>
	</select>

	<delete id="deletePerByRoleId">
		delete from role_per where role_id=#{roleId}
	</delete>


	<insert id="batchSave">
		INSERT INTO role_per(role_id, per_id) values
		<foreach item="item" index="index" collection="list"
				 separator=",">
			(#{item.roleId},#{item.perId})
		</foreach>
	</insert>

	<select id="selectPerIdByRoleIds" resultType="integer">
		select per_id from role_per where role_id in
		<foreach item="item" index="index" collection="list"
				 open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>


</mapper>